{{ 'section-main-product.css' |  asset_url |  stylesheet_tag }}

{% style %}
  .main_product-section-{{ section.id }}{
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .main_product-section-{{ section.id }}{
      padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
      padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
    }
  }
{% endstyle %}

{% assign product = section.settings.product %}

<div class="main-product main_product-section-{{ section.id }}">
  <div class="page-width">
    <div class="product-grid">
      <div class="product_media-banner">
        {{ product.featured_image |  image_url: width: 758 | image_tag: class: 'media-thumbnail', loading: 'lazy'  }}
      </div>
      <div class="product-information">
        {% if product != blank %}
          <h2 class="product-title">{{ product.title }}</h2>

          <div class="product-price">
            {% 
              liquid
              assign price = product.selected_or_first_available_variant.price
              assign compare_at_price = product.selected_or_first_available_variant.compare_at_price
              if compare_at_price
                assign savings = compare_at_price | minus: price
              endif
            %}

            <span class="product_regular--price">{{ product.selected_or_first_available_variant.price | money }}</span>
            <span class="product_old--price"><s>{{ product.selected_or_first_available_variant.compare_at_price | money }}</s></span>
            <span class="product_price--badge">Save {{ savings | money }}</span>
          </div>

          <div class="product-content">
            {{ product.content }}
          </div>

          <div class="product-tags">
            {% for tag in product.tags %}
              <span>{{ tag }}</span>
            {% endfor %}
          </div>

          <div class="product-add-to-cart">
            <form id="addToCart">
              <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}" class="product-variant-id">
          <button class="button add-to-cart" {% unless product.available %}disabled{% endunless %} type="submit" name="Add To Cart">
            {% if product.available %}
              Add To Cart
            {% else %}
              Sold Out
            {% endif %}
          </button>
            </form>
          </div>
        {% endif %}
      </div>
    </div>
  
    {% render 'product-more-info', product:product %}
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const form = document.getElementById('addToCart');
    const id = document.querySelector('.product-variant-id').value;
    const button = document.querySelector('.add-to-cart');
    const bubble_count = document.querySelector('.cart-count-bubble span');

    form.addEventListener('submit', function (event) {
      event.preventDefault();

      let formData = {
      'items': [{
        'id': id,
        'quantity': 1
        }]
      };

      fetch(window.Shopify.routes.root + 'cart/add.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(formData)
      })
      .then(response => {
        return response.json();
      })
      .then(data => {
        console.log('added to the cart', data);
        button.innerHTML = 'Added To Cart';
        const new_count = parseInt(bubble_count.textContent, 10) + 1;
        bubble_count.textContent = new_count;
      })
      .catch((error) => {
        console.error('Error:', error);
      });
    });

  });
</script>

{% schema %}
{
  "name": "Featured product",
  "settings": [
    {
      "type": "product",
      "id": "product",
      "label": "Product"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding Top",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding Bottom",
      "default": 52
    }
  ],
  "presets": [
    {
      "name": "Featured product"
    }
  ]
}
{% endschema %}